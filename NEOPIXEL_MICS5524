#include <Adafruit_NeoPixel.h>
#include "DFRobot_MICS.h"

#ifdef __AVR__
  #include <avr/power.h>
#endif

#define NEOPIXEL_PIN      6     // Pin di controllo dei Neopixel
#define NUMPIXELS         2     // Numero di LED Neopixel
#define SENSOR_ADC_PIN    A11   // Pin analogico per la lettura del sensore CO
#define SENSOR_POWER_PIN  9     // Pin digitale per attivare/disattivare il sensore
#define CALIBRATION_TIME  2     // Tempo di calibrazione in minuti

// Inizializza il sensore DFRobot MICS
DFRobot_MICS_ADC mics(SENSOR_ADC_PIN, SENSOR_POWER_PIN);

// Inizializza la striscia Neopixel
Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, NEOPIXEL_PIN, NEO_GRB + NEO_KHZ800);

void setup() {
  Serial.begin(115200);
  pixels.begin();        // Avvia Neopixel
  pixels.show();         // Spegne i LED inizialmente

  // Avvio del sensore MICS5524
  Serial.println("Inizializzazione del sensore CO...");
  
  while (!mics.begin()) {
    Serial.println("Errore: sensore non rilevato! Controllare i collegamenti.");
    delay(1000);
  }
  Serial.println("Sensore rilevato con successo!");

  // Verifica stato del sensore e attivazione se necessario
  uint8_t mode = mics.getPowerState();
  if (mode == SLEEP_MODE) {
    mics.wakeUpMode();
    Serial.println("Sensore riattivato!");
  } else {
    Serial.println("Sensore già attivo.");
  }

  // Attendere il completamento della calibrazione
  while (!mics.warmUpTime(CALIBRATION_TIME)) {
    Serial.println("Attendere il completamento della calibrazione...");
    delay(1000);
  }
  Serial.println("Calibrazione completata. Sensore pronto.");
}

void loop() {
  // Lettura della concentrazione di CO (Monossido di Carbonio)
  float coConcentration = mics.getGasData(CO);
  
  Serial.print("CO (Monossido di Carbonio): ");
  Serial.print(coConcentration, 1);
  Serial.println(" PPM");

  // Definizione range ppm per i LED
  float PPM_MIN = 0;     // Aria pulita
  float PPM_MAX = 100;   // Forte presenza di CO

  // Mappatura dei colori netti (bianco → giallo caldo → arancione intenso)
  int red, green, blue;

  if (coConcentration <= 20) {  
    red = 150; green = 150; blue = 150; // Bianco tenue (meno intenso)
  } 
  else if (coConcentration > 20 && coConcentration <= 60) {  
    red = 200; green = 100; blue = 0; // Giallo caldo senza blu
  } 
  else {  
    red = 255; green = 50; blue = 0; // Arancione intenso senza blu
  }

  // Imposta il colore sui LED
  for (int i = 0; i < NUMPIXELS; i++) {
    pixels.setPixelColor(i, pixels.Color(red, green, blue));
  }

  pixels.show();  // Aggiorna i LED

  delay(1000); // Attesa per la prossima lettura
}
